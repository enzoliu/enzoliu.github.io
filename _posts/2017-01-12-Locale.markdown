---
layout: post
title: 取得手機語系
date: 2017-01-12 14:41:24.000000000 +08:00
---

取得手機語系有許多種方式，包含：

```swift
NSBundle.mainBundle().preferredLocalizations.first
NSLocale.preferredLanguages().first
NSLocale.currentLocale().localeIdentifier
```

三者取得的值不一定相同，這跟他們的呼叫邏輯有點關係。

在說明這件事之前，先用下列例子了解一下語系設定的細節：

> 範例一

| Mobile     | APP        |
| ---------- | ---------- |
| zh-HK      | en-US      |
| ---------- | ---------- |
| en-US      | zh-Hant    |
| ---------- | ---------- |
| zh-Hans_US | zh-Hans    |

在手機設定的部分，第一順位語言為香港繁體，第二順位為英文，第三順位為簡體。

此外，手機設定地區是美國。

而APP部分提供英文｀繁體及簡體中文版語言。

用`NSLocale.preferredLanguages().first`會得到
zh-HK

用`NSLocale.currentLocale().localeIdentifier`會得到
zh-Hant_US

用`NSBundle.mainBundle().preferredLocalizations.first`會得到
zh-Hant

> 範例二

| Mobile     | APP        |
| ---------- | ---------- |
| ja-US      | en-US      |
| ---------- | ---------- |
| zh-Hans-US | zh-Hant    |
| ---------- | ---------- |
|            | zh-Hans    |

用`NSLocale.preferredLanguages().first`會得到
ja-US

用`NSLocale.currentLocale().localeIdentifier`會得到
ja_US

用`NSBundle.mainBundle().preferredLocalizations.first`會得到
zh-Hans

> 說明

`NSLocale.preferredLanguages().first`
會將手機語系第一順位直接列出，包含地區設定。

`NSLocale.currentLocale().localeIdentifier`
會將手機語系第一順位以[rfc4646][ref-rfc4646]標準輸出。

`NSBundle.mainBundle().preferredLocalizations.first`
這比較有趣，他會從APP bundle語系裡，尋找手機語系列表中匹配的語言來輸出。
簡單來說，若想要取得「APP有提供，且用戶有將該語系作為語言之一」的語系，用這個就對了。

> 補充說明

很多人可能會覺得納悶，為何會有像`zh-Hans-US`這種奇怪的組合出現，
iOS9開始，Apple對NSLocale做了些[更動][ios9-nslocale]
Apple將`-`符號切開的三個部分分別命名如下：

```swift
kCFLocaleLanguageCodeKey
kCFLocaleScriptCodeKey
kCFLocaleCountryCodeKey
```

以`zh-Hans-US`為例 :

```swift
kCFLocaleLanguageCodeKey => zh
kCFLocaleScriptCodeKey => Hans
kCFLocaleCountryCodeKey => US
```
kCFLocaleCountryCodeKey是在手機設定中的地區，所以其實跟語系沒什麼關係。

[ref-rfc4646]: https://www.ietf.org/rfc/rfc4646.txt
[ios9-nslocale]: https://developer.apple.com/library/content/technotes/tn2418/_index.html#//apple_ref/doc/uid/DTS40016588-CH1-LANGUAGE_IDENTIFIERS_IN_IOS_9